name: Docker Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: terateams/execmcp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.PKG_GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        sbom: true
        provenance: true

    - name: Generate release notes
      id: release-notes
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        script: |
          try {
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.ref.replace('refs/tags/', '')
            });

            const releaseNotes = release.body || '';
            core.setOutput('notes', releaseNotes);
          } catch (error) {
            console.log('Release not found, generating changelog-based release notes');
            const tagName = context.ref.replace('refs/tags/', '');

            // Try to get commits since last tag
            try {
              const { data: commits } = await github.rest.repos.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 50
              });

              let changelog = `## Release ${tagName}\n\n`;
              changelog += `### Changes\n\n`;

              for (const commit of commits) {
                if (commit.commit.message && !commit.commit.message.startsWith('Merge')) {
                  changelog += `- ${commit.commit.message.split('\n')[0]}\n`;
                }
              }

              core.setOutput('notes', changelog);
            } catch (commitError) {
              console.log('Could not generate changelog, using simple release notes');
              const releaseNotes = `## Release ${tagName}\n\n### Changes\n\n- Automated release from GitHub Actions\n- Docker image built and pushed to GHCR`;
              core.setOutput('notes', releaseNotes);
            }
          }

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      continue-on-error: true
      with:
        body: ${{ steps.release-notes.outputs.notes || format('Release {0}', github.ref_name) }}
        files: |
          LICENSE
          README.md
        draft: false
        prerelease: contains(github.ref, '-beta') || contains(github.ref, '-alpha') || contains(github.ref, '-rc')
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.PKG_GITHUB_TOKEN }}
